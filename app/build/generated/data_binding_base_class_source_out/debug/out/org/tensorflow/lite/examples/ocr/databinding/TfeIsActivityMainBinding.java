// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.ocr.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.ocr.R;

public final class TfeIsActivityMainBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView androidImageview;

  @NonNull
  public final ImageView chromeImageview;

  @NonNull
  public final LinearLayout imagesContainer;

  @NonNull
  public final ImageView resultImageview;

  @NonNull
  public final TextView textPrompt;

  @NonNull
  public final ImageView tfImageview;

  @NonNull
  public final Toolbar toolbar;

  private TfeIsActivityMainBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageView androidImageview, @NonNull ImageView chromeImageview,
      @NonNull LinearLayout imagesContainer, @NonNull ImageView resultImageview,
      @NonNull TextView textPrompt, @NonNull ImageView tfImageview, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.androidImageview = androidImageview;
    this.chromeImageview = chromeImageview;
    this.imagesContainer = imagesContainer;
    this.resultImageview = resultImageview;
    this.textPrompt = textPrompt;
    this.tfImageview = tfImageview;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TfeIsActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TfeIsActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tfe_is_activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TfeIsActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.android_imageview;
      ImageView androidImageview = ViewBindings.findChildViewById(rootView, id);
      if (androidImageview == null) {
        break missingId;
      }

      id = R.id.chrome_imageview;
      ImageView chromeImageview = ViewBindings.findChildViewById(rootView, id);
      if (chromeImageview == null) {
        break missingId;
      }

      id = R.id.images_container;
      LinearLayout imagesContainer = ViewBindings.findChildViewById(rootView, id);
      if (imagesContainer == null) {
        break missingId;
      }

      id = R.id.result_imageview;
      ImageView resultImageview = ViewBindings.findChildViewById(rootView, id);
      if (resultImageview == null) {
        break missingId;
      }

      id = R.id.text_prompt;
      TextView textPrompt = ViewBindings.findChildViewById(rootView, id);
      if (textPrompt == null) {
        break missingId;
      }

      id = R.id.tf_imageview;
      ImageView tfImageview = ViewBindings.findChildViewById(rootView, id);
      if (tfImageview == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new TfeIsActivityMainBinding((CoordinatorLayout) rootView, androidImageview,
          chromeImageview, imagesContainer, resultImageview, textPrompt, tfImageview, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
